"use strict";(self.webpackChunkmui_file_input=self.webpackChunkmui_file_input||[]).push([[491],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var i=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,l=function(e,t){if(null==e)return{};var n,i,l={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var u=i.createContext({}),o=function(e){var t=i.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=o(e.components);return i.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,u=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),c=o(n),m=l,f=c["".concat(u,".").concat(m)]||c[m]||s[m]||a;return n?i.createElement(f,r(r({ref:t},d),{},{components:n})):i.createElement(f,r({ref:t},d))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,r=new Array(a);r[0]=c;var p={};for(var u in t)hasOwnProperty.call(t,u)&&(p[u]=t[u]);p.originalType=e,p.mdxType="string"==typeof e?e:l,r[1]=p;for(var o=2;o<a;o++)r[o]=n[o];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1082:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>r,default:()=>s,frontMatter:()=>a,metadata:()=>p,toc:()=>o});var i=n(7462),l=(n(7294),n(3905));const a={sidebar_position:3},r="API Reference",p={unversionedId:"api-reference",id:"api-reference",title:"API Reference",description:"This article discusses the API and props of MuiFileInput. Props are defined within MuiFileInputProps.",source:"@site/docs/api-reference.md",sourceDirName:".",slug:"/api-reference",permalink:"/mui-file-input/docs/api-reference",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/mui-file-input/docs/getting-started"},next:{title:"TextField inheritance",permalink:"/mui-file-input/docs/inheritance"}},u={},o=[{value:"<code>value</code>",id:"value",level:2},{value:"Example",id:"example",level:3},{value:"<code>onChange</code>",id:"onchange",level:2},{value:"<code>multiple</code>",id:"multiple",level:2},{value:"<code>hideSizeText</code>",id:"hidesizetext",level:2},{value:"<code>getInputText</code>",id:"getinputtext",level:2},{value:"<code>getSizeText</code>",id:"getsizetext",level:2}],d={toc:o};function s(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"api-reference"},"API Reference"),(0,l.kt)("p",null,"This article discusses the API and props of ",(0,l.kt)("strong",{parentName:"p"},"MuiFileInput"),". Props are defined within ",(0,l.kt)("inlineCode",{parentName:"p"},"MuiFileInputProps"),"."),(0,l.kt)("h2",{id:"value"},(0,l.kt)("inlineCode",{parentName:"h2"},"value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"File")," | ",(0,l.kt)("inlineCode",{parentName:"li"},"null")," | ",(0,l.kt)("inlineCode",{parentName:"li"},"undefined")),(0,l.kt)("li",{parentName:"ul"},"or if ",(0,l.kt)("inlineCode",{parentName:"li"},"multiple")," is present: ",(0,l.kt)("inlineCode",{parentName:"li"},"File[]")," | ",(0,l.kt)("inlineCode",{parentName:"li"},"undefined")),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"undefined"))),(0,l.kt)("h3",{id:"example"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},'const file = new File(["foo"], "foo.txt", {\n  type: "text/plain",\n});\n\n<MuiFileInput />\n<MuiFileInput value={file} />\n<MuiFileInput multiple value={[file]}/>\n')),(0,l.kt)("h2",{id:"onchange"},(0,l.kt)("inlineCode",{parentName:"h2"},"onChange")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"(value: File | File[]) => void")),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"undefined"))),(0,l.kt)("p",null,"Gets called once the user updates the file value."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},"\nconst handleChange = (value) => {\n  /**\n  value: File\n  **/\n}\n\n<MuiFileInput onChange={handleChange} />\n")),(0,l.kt)("h2",{id:"multiple"},(0,l.kt)("inlineCode",{parentName:"h2"},"multiple")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"false"))),(0,l.kt)("p",null,"Like the native ",(0,l.kt)("inlineCode",{parentName:"p"},"multiple")," attribute, when present, it specifies that the user is allowed to enter more than one value in the ",(0,l.kt)("inlineCode",{parentName:"p"},"<input>")," element.\nThe type of the ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," prop will be ",(0,l.kt)("inlineCode",{parentName:"p"},"File[]")," instead of ",(0,l.kt)("inlineCode",{parentName:"p"},"File"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},"// TS will throw an error if the value is a single File instead of an array of Files.\n<MuiFileInput multiple />\n")),(0,l.kt)("h2",{id:"hidesizetext"},(0,l.kt)("inlineCode",{parentName:"h2"},"hideSizeText")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"false"))),(0,l.kt)("p",null,"In case you do not want to display the size of the current value."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},"<MuiFileInput hideSizeText />\n")),(0,l.kt)("h2",{id:"getinputtext"},(0,l.kt)("inlineCode",{parentName:"h2"},"getInputText")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"(value: File | File[] | null |\xa0undefined) => string")),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"undefined"))),(0,l.kt)("p",null,"Customize the render text inside the TextField."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},"<MuiFileInput getInputText={(value) => value ? 'Thanks!' : ''} />\n")),(0,l.kt)("h2",{id:"getsizetext"},(0,l.kt)("inlineCode",{parentName:"h2"},"getSizeText")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"(value: File | File[] | null |\xa0undefined) => string")),(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"undefined"))),(0,l.kt)("p",null,"Customize the render text inside the size Typography."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},"<MuiFileInput getSizeText={(value) => 'Very big'} />\n")))}s.isMDXComponent=!0}}]);